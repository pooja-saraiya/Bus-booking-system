service.name= booking-service
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.jpa.show-sql = true
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.database.driverClassName= org.postgresql.Driver
spring.datasource.username= postgres
spring.datasource.password= postgres
spring.datasource.url= jdbc:postgresql://localhost:5432/busbooking
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

eureka.instance.preferIpAddress= true
eureka.client.registerWithEureka= true
eureka.client.fetchRegistry= true
eureka.client.serviceUrl.defaultZone= http://localhost:8761/eureka

spring.cloud.gateway.discovery.locator.enabled= true
spring.cloud.gateway.discovery.locator.lower-case-service-id= true

springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.topic.name=payment
spring.kafka.consumer.group-id=Paymentgroup

spring.kafka.topic.name.inventory=inventory
spring.kafka.consumer.group-id.inventory=inventorygroup

spring.kafka.topic.name.bookingstatus=bookingstatus
spring.kafka.consumer.group-id.bookingstatus=bookingstatusgroup
